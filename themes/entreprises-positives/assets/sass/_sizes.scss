// heights in vh
@for $i from 1 through 10 {
  .minh-#{$i * 10}vh {
    min-height: 10vh * $i;
  }

  .maxh-#{$i * 10}vh {
    max-height: 10vh * $i;
  }

  .h-#{$i * 10}vh {
    height: 10vh * $i;
  }
}

// Heights in rem
@for $i from 1 through 10 {
  .minh-#{$i}r {
    min-height: #{$i}rem;
  }

  .maxh-#{$i}r {
    max-height: #{$i}rem;
  }

  .h-#{$i}r {
    height: #{$i}rem;
  }


  @include media-breakpoint-up(lg){
    .minh-lg-#{$i}r {
      min-height: #{$i}rem;
    }

    .maxh-lg-#{$i}r {
      max-height: #{$i}rem;
    }

    .h-lg-#{$i}r {
      height: #{$i}rem;
    }
  }
}

@include media-breakpoint-up(md) {
  @each $i, $percent in $sizes {
    .w-md-#{$i} {
      width: $percent !important;
    }
  }
}

@include media-breakpoint-up(lg) {
  @each $i, $percent in $sizes {
    .w-lg-#{$i} {
      width: $percent !important;
    }
  }
}

@include media-breakpoint-up(xl) {
  @each $i, $percent in $sizes {
    .w-xl-#{$i} {
      width: $percent !important;
    }
  }
}

// Min height 100 for too small
.minh-100 {
  min-height: 100%;
}

@for $i from 1 through 100 {
  .w-#{$i}vw {
    width: 1vw * $i;
  }
}

@include media-breakpoint-up(lg) {
  @for $i from 1 through 100 {
    .w-lg-#{$i}vw {
      width: 1vw * $i;
    }
  }
}

@include media-breakpoint-up(xl) {
  @for $i from 1 through 100 {
    .w-xl-#{$i}vw {
      width: 1vw * $i;
    }
  }
}

$list-size: (
  1: 100/1,
  2: 100/2,
  3: 100/3,
  4: 100/4,
  5: 100/5,
  6: 100/6,
  7: 100/7,
);

@each $i, $percent in $list-size {
  .w-len-#{$i} {
    width: 0% + $percent;
  }
}

@media (min-width: 1200px) {
  .container.small-container {
    max-width: 960px;
  }
}
